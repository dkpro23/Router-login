<!-- vim:fenc=utf-8
-->
<html><head>
<title>

GPON Home Gateway

</title>		
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="referrer" content="no-referrer">
<script>if(self!=top) top.location=self.location

if(!window.name){
        location.reload();
        window.name = 'Bell';
}
</script>
<link rel="stylesheet" href="GPON%20Home%20Gateway_files/main.css" type="text/css">
<style>
body {
    margin:0px; padding:0px; background:#ffffff; 
    font-size:12px; color:#E36813;
    line-height:170%;
    text-align:center;
    vertical-align: middle ;
    padding-top: 150px;
}
.ct_text{
    width:115px;border:1px #87a6c3 solid;background:#ffffff;
}

</style>
<script src="GPON%20Home%20Gateway_files/jquery-1.js" charset="UTF-8"></script>

<script src="GPON%20Home%20Gateway_files/jsencrypt.js"></script>

<script src="GPON%20Home%20Gateway_files/sjcl.js"></script>
<script src="GPON%20Home%20Gateway_files/crypto_page.js"></script>
<script src="GPON%20Home%20Gateway_files/protectBtnClick.js"></script>
<script>




var pubkey = '-----BEGIN PUBLIC KEY-----\
MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC4i/KObXBIiG/0ZR1efnVoQNXj\
/phJ7aKVpYwsAI65pz9ACeLpgIi9OoqNgyFKjYW53N7zGgWzV3CbLfHFtsjtCbrE\
vkdQPJIjVAZUm/TVuZzPAmaFQod52vFHUvpx5yGc1WKhdba5paFzzTWGXFiNCNY0\
ZfnVCTB6s6NP+BnWowIDAQAB\
-----END PUBLIC KEY-----\
'; 


var err_t=[];
var ns4 = (document.layers) ? true : false;
var ie4 = (document.all) ? true : false;

var hexVals = new Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
              "A", "B", "C", "D", "E", "F");
var unsafeString = "\"<>%\\^[]`\+\$\,'#&";
// deleted these chars from the include list ";", "default.htm", "?", ":", "@", "=", "&" and #
// so that we could analyze actual URLs
var error_msg = {"Account not enabled":"Account not enabled"};
    
$(function(){
	protectBtnClick('loginBT');
    $("#err_msg").html(error_msg[$("#err_msg").html()]);
})

function isUnsafe(compareChar)
// this function checks to see if a char is URL unsafe.
// Returns bool result. True = unsafe, False = safe
{
   if ( unsafeString.indexOf(compareChar) == -1 && compareChar.charCodeAt(0) > 32
        && compareChar.charCodeAt(0) < 123 )
      return false; // found no unsafe chars, return false
   else
      return true;
}

function decToHex(num, radix)
// part of the hex-ifying functionality
{
   var hexString = "";
   while ( num >= radix ) {
      temp = num % radix;
      num = Math.floor(num / radix);
      hexString += hexVals[temp];
   }
   hexString += hexVals[num];
   return reversal(hexString);
}

function reversal(s)
// part of the hex-ifying functionality
{
   var len = s.length;
   var trans = "";
   for (i = 0; i < len; i++)
      trans = trans + s.substring(len-i-1, len-i);
   s = trans;
   return s;
}

function convert(val)
// this converts a given char to url hex form
{
   return  "%" + decToHex(val.charCodeAt(0), 16);
}

function encodeUrl(val)
{
   var len     = val.length;
   var i       = 0;
   var newStr  = "";
   var original = val;

   for ( i = 0; i < len; i++ ) {
      if ( val.substring(i,i+1).charCodeAt(0) < 255 ) {
         // hack to eliminate the rest of unicode from this
         if (isUnsafe(val.substring(i,i+1)) == false)
            newStr = newStr + val.substring(i,i+1);
         else
            newStr = newStr + convert(val.substring(i,i+1));
      } else {
         // woopsie! restore.
         alert ("Found a non-ISO-8859-1 character at position: " + (i+1) + ",\nPlease eliminate before continuing.");
         newStr = original;
         // short-circuit the loop and exit
         i = len;
      }
   }

   return newStr;
}

function onlogin() {
	with ( document.forms[0] ) {
		if(username.value.length <= 0) {
			alert("User name is null");
			return;
		}

		var loc = "login.cgi@username=" + encodeUrl(username.value) + "&psd=" + encodeUrl(password.value);
		var code = 'location="' + loc + '"';
		eval(code);
	}
}

function onlogindiag() {
	with ( document.forms[0] ) {
		if(username.value.length <= 0) {
			alert("User name is null");
			return;
		}

		var loc = "login.cgi@diag=1" + "&username=" + encodeUrl(username.value) + "&psd=" + encodeUrl(password.value);
		var code = 'location="' + loc + '"';
		eval(code);
	}
}

function myKeyDown(e) {
	if(ns4 && e.which==13){
		//onlogin();
		return e.which;
	} else if(ie4 && window.event.keyCode==13) {   
		//onlogin();
		return window.event.keyCode;
	}
	return 0;
}

document.onkeydown = myKeyDown;
if(ns4) {
	document.captureEvents(Event.KEYDOWN);
} 

var popUpWin=0;

function popUpRegWin()
{
  if(popUpWin)
  {
    if(!popUpWin.closed) popUpWin.close();
  }
  popUpWin = open("reg.cgi", 'popUpWin', 
  'toolbar=yes,location=no,directories=no,status=no,menubar=yes,scrollbars=yes,resizable=yes,copyhistory=yes,width=800,height=600,left=200, top=200');
}



//function changeSubmit()
//{
//	document.getElementById["loginform"].action = "login.cgi?selftest";
//	$["#loginform"].submit();
//}



function submit() { 
    var username = $(":input[id=username]").val();
    var password = $(":input[id=password]").val();
    var nonce = "xdtQP+ohCWNJ+cFPgHA+6METS83JPNO8qwrmFRV0Fos=";   
    var token ="jFwIaetZSYKVzzDg";
    
    
    
	    var base64 = sjcl.codec.base64;
        var dec_key = base64.fromBits(sjcl.random.randomWords(4, 0));
        var dec_iv = base64.fromBits(sjcl.random.randomWords(4, 0));
		var postdata  = '&username=' + username + '&password=' + encodeURIComponent(password) + '&csrf_token=' + token + '&nonce=' + nonce+'&enckey='+crypto_page.base64url_escape(dec_key)+'&enciv='+crypto_page.base64url_escape(dec_iv); 
		
		var encryptdata = crypto_page.encrypt_post_data(pubkey, postdata);
                
        $.ajax({                        
                url: '/login.cgi',
                type: 'POST',

                data: encryptdata,

                success: function(data, textstatus, jqXHR) {
                    if (jqXHR.status == 299) {
                        var sid = jqXHR.getResponseHeader('X-SID');

                        localStorage.clear();
                        localStorage.setItem(sid, dec_key + ' ' + dec_iv);
                        window.top.location="/"
                    }
                    else {
                        var doc = document.open("text/html", "replace");
                        doc.write(data);
                        doc.close();
                    }
                }
            });	
}


function frmLoad() {
  with (document.forms[0]) {
  
	  
     		username.focus();

      

    var ErrorLimit = 4;  
	if ($("#tip").val() != undefined) {

		tip_stat="";
	    tt="<font color='black'>Password Tip:</font>";


        
		if ($("#tip").text() == ""){
		
			
				
            tip_stat=tt+"<font color='red'>Please input default password!</font>";
        
		
		
        
			$("#tip").text("");
			$("#tip").html(tip_stat);

		}else{
		    stt="<font color='red'>"+$("#tip").text()+"</font>";
		    tip_stat=tt+stt;
			$("#tip").html(tip_stat);
		}

	}
	
    if(err_t.length >0){
        err1=parseInt(err_t[0]);
       if((err1>0)&&(err1<=ErrorLimit)){
            if(err1==1){
                err_str="<font color='red'>You have failed once</font>";
            }
            else if(err1==2){
                err_str="<font color='red'>You have failed twice</font>";
            }
            else{
                err_str="<font color='red'>You have failed</font>";
                err_str+=" "+err1+" ";
                err_str+="<font color='red'>times</font>";
            }
            $("#err_times").html(err_str);
       }
       
       else{
            $("#err_times").html("");
       }
    }

	
  }
}

</script>
</head>
<body onload="frmLoad()" topmargin="0" leftmargin="0">
<form method="post" action="javascript:submit();" id="loginform">


<table width="300" height="20%" cellspacing="0" cellpadding="0" bgcolor="#ffffff" align="center">
    
        <tbody><tr height="32" bgcolor="#4393A3" align="center"> 
    
        <td colspan="2" style="FONT-WEIGHT: bold;color:#000000;">
            GPON Home Gateway    
        </td> 
    </tr> 
    <tr height="100">
        
            <td style="border:2px solid #4393a3 " width="100%">
        
            <table> 
                <tbody><tr height="50%" align="top"> 
                    <td style="color:#000000" width="55%" align="center">Username</td> 
                    <td width="120" height="15" align="center">
                    
                    <input type="text" name="name" id="username" class="ct_text" style="background-color:0xffffff" maxlength="55">
                    
                    </td> 
                </tr> 
                <tr background-color:#ffffff="" height="10"></tr>
                <tr> 
                    <td style="color:#000000" width="55%" align="center">Password</td> 
                    <td width="120" height="15" align="center"><input type="password" name="pswd" id="password" class="ct_text" style="background-color:0xffffff" maxlength="88" autocomplete="off"></td> 
                </tr> 
                <tr height="5" align="center"> 
                    <td colspan="2" id="err_times"></td> 
                </tr> 
            </tbody></table> 
        </td> 
    </tr> 

    
        <tr height="12" bgcolor="#4393A3" align="center"> 
    
        <td colspan="2">
            <table width="100%"> 
                <tbody><tr>
                    <td width="40%" align="right">
                        <input type="submit" id="loginBT" name="loginBT" value="Login" height="10">
                    </td>
                    <td align="center">
                        <input type="reset" value="Reset" height="10">
                    </td> 
                </tr>
            </tbody></table>
        </td> 
    </tr> 
    
</tbody></table>
</form>



</body></html>
